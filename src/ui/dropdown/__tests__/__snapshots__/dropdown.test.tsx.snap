// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dropdown Component should render without issues 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  hideModalContentWhileAnimating={false}
  onModalHide={[Function]}
  onModalWillHide={[Function]}
  onModalWillShow={[Function]}
  onRequestClose={[Function]}
  onSwipeComplete={[Function]}
  scrollHorizontal={false}
  scrollOffset={0}
  scrollOffsetMax={0}
  scrollTo={null}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  swipeDirection={
    Array [
      "down",
    ]
  }
  swipeThreshold={100}
  transparent={true}
  visible={false}
>
  <View
    accessible={true}
    clickable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "black",
        "bottom": 0,
        "height": 1334,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 750,
      }
    }
  />
  <View
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    onSwipeComplete={[Function]}
    pointerEvents="box-none"
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    style={
      Object {
        "flex": 1,
        "justifyContent": "flex-end",
        "left": 0,
        "margin": 0,
        "top": 0,
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
      }
    }
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeDirection={
      Array [
        "down",
      ]
    }
    swipeThreshold={100}
  >
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "backgroundColor": "#FFFFFF",
          "borderRadius": 0,
          "flexDirection": "column",
          "flexWrap": "nowrap",
          "justifyContent": undefined,
          "position": "relative",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "flex-start",
            "alignSelf": "center",
            "backgroundColor": "#d9d9d9",
            "borderRadius": 12,
            "flexDirection": "column",
            "flexWrap": "nowrap",
            "height": 7,
            "justifyContent": undefined,
            "marginVertical": 10,
            "position": "relative",
            "width": 40,
          }
        }
      />
      <RCTSafeAreaView
        emulateUnlessSupported={true}
        pointerEvents="box-none"
      >
        <View
          style={
            Object {
              "alignItems": "flex-start",
              "backgroundColor": "#FFFFFF",
              "borderRadius": 0,
              "flexDirection": "column",
              "flexWrap": "nowrap",
              "justifyContent": undefined,
              "position": "relative",
            }
          }
        >
          <View
            accessible={true}
            clickable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "stretch",
                "backgroundColor": "#FFFFFF",
                "borderRadius": 0,
                "flexDirection": "row",
                "justifyContent": "center",
                "overflow": "hidden",
                "padding": 0,
                "position": "relative",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "alignSelf": "stretch",
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "position": "relative",
                  "width": "100%",
                }
              }
            />
          </View>
        </View>
      </RCTSafeAreaView>
    </View>
  </View>
</Modal>
`;
